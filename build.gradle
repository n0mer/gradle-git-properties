import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'groovy'
    id 'maven-publish'
    id 'java-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.14.0"
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "com.gorylenko.gradle-git-properties" version "2.3.1"
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

apply plugin: "com.gradle.plugin-publish"

repositories {
    mavenCentral()
    maven {
        name = 'ajoberstar-backup'
        url = 'https://ajoberstar.org/bintray-backup/'
    }
    // for debugging
    //maven {
    //    url 'https://repo.gradle.org/gradle/libs-releases-local/'
    //}
}

dependencies {
    shadow gradleApi()
    shadow localGroovy()
    implementation('org.ajoberstar.grgit:grgit-core:4.1.0') {
        exclude group: "org.eclipse.jgit", module: 'org.eclipse.jgit'
    }
    implementation "org.eclipse.jgit:org.eclipse.jgit:5.13.0.202109080827-r"
    // for debugging
    //implementation 'org.gradle:gradle-language-jvm:5.6.2'
    //implementation 'org.gradle:gradle-language-java:5.6.2'


    testImplementation 'junit:junit:4.12'
    testImplementation gradleTestKit()
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "gradlegitproperties"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

shadowJar {
    archiveClassifier.set('')
}

tasks.shadowJar.dependsOn tasks.jar

components.java.withVariantsFromConfiguration(configurations.runtimeElements) {
    skip()
}

version = "2.4.0-rc1"
group = "com.gorylenko.gradle-git-properties"

gitProperties {
    keys = ['git.branch','git.commit.id','git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mm:ssZ"
    dateFormatTimeZone = "PST"
}

tasks.withType(GroovyCompile) {
    targetCompatibility = JavaVersion.VERSION_1_8
}
test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

tasks.register("sourceJar", Jar) {
    classifier = "sources"
    from sourceSets.main.resources, sourceSets.main.groovy

    dependsOn tasks.named("classes")
}

publishing {

    publications {

        pluginJar(MavenPublication) {  publication ->

            from project.shadow.component(publication)

            artifact sourceJar
        }
    }
    // for testing: ./gradlew clean publishToMavenLocal
    repositories {
        mavenLocal()
    }
}

pluginBundle {
    website = 'http://github.com/n0mer/gradle-git-properties'
    vcsUrl = 'https://github.com/n0mer/gradle-git-properties'
    description = 'Produce git.properties for spring-boot-actuator'
    tags = ['git', 'spring-boot']

    plugins {
        gitPropertiesPlugin {
            id = 'com.gorylenko.gradle-git-properties'
            displayName = 'Gradle Git Properties plugin'
        }
    }
}
